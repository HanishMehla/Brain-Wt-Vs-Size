%matplotlib inline
import numpy as np                                 
import pandas as pd                               
import matplotlib.pyplot as plt
plt.rcParams['figure.figsize']=(20.0,10.0)        #length and Breadth of figure


#Training 


#Reading Data
data=pd.read_csv('headbrain.csv',nrows=150)             
#print(data)
#data.head()

#collecting values in form of list
X=data['Head Size(cm^3)'].values
Y=data['Brain Weight(grams)'].values

#calculating mean
x_mean=np.mean(X)
y_mean=np.mean(Y)



n=len(X)


#calculation of m and c of y=mx+c
numer=0
denom=0
for i in range(n):
    numer +=(X[i]-x_mean)*(Y[i]-y_mean)
    denom +=(X[i]-x_mean) ** 2
    
    
M=numer/denom
C = y_mean-(M*x_mean)

    
    
max_x=np.max(X)
min_x=np.min(X)
    
    
x=np.linspace(min_x,max_x,1000)      # Returns a row vector x between min_x and max_x
y= C + M*x
     
    
   
#regression line 
plt.plot(x,y,color='orange',label='Regression line of Training')
#plotting values
plt.scatter(X,Y,color='red',label='Scatter plot of Training')
    
#labelling x axis and y axis
plt.xlabel('Head Size (cm^3)')
plt.ylabel('Brain Weight in grams')
plt.legend()
plt.plot()
    
    
# Fitness check-Coefficient of Determination
Up=0
down=0
for i in range(n):
    y_pred= M * X[i] + C
    Up+=(Y[i]-y_pred) ** 2
    down+=(Y[i]-y_mean) ** 2
    
R_Square=1-(Up/down) 
print('Coefficient of Determination of Training is:',R_Square)










#Testing





#Reading Data
data1=pd.read_csv('headbrain.csv',skiprows=150, nrows=230)             
#print(data1)
#data1.head()



X1=data1['3090'].values
Y1=data1['1168'].values

max_x1=np.max(X1)
min_x1=np.min(X1)

x1=np.linspace(min_x1,max_x1,1000) 
y1= C + M*x1



#regression line 
plt.plot(x1,y1,color='black',linestyle='dashed',label='Regression line of Testing')
#plotting values
plt.scatter(X1,Y1,color='violet',label='Scatter plot of Testing')
    
#labelling x axis and y axis
plt.xlabel('Head Size (cm^3)')
plt.ylabel('Brain Weight in grams')
plt.legend()
plt.plot()




m=len(X1)
#calculating mean
x1_mean=np.mean(X1)
y1_mean=np.mean(Y1)

# Fitness check-Coefficient of Determination
Up1=0
down1=0
for i in range(m):
    y1_pred= M * X1[i] + C
    Up1+=(Y1[i]-y1_pred) ** 2
    down1+=(Y1[i]-y1_mean) ** 2
    
r_Square=1-(Up1/down1) 
print('Coefficient of Determination of Testing is:',r_Square)
